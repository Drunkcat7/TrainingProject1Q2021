#homePopup {
    position: fixed;
    display: block;
    width: 1200px;
    height: 700px;
    left: 50%;
    top: 50%;
    margin-left: -600px;
    margin-top: -350px;
    
    background: rgba( 255, 255, 255, 0.25 );
    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );
    backdrop-filter: blur( 4px );
    -webkit-backdrop-filter: blur( 4px );
    border-radius: 20px;

    /* 上面滑动下来 */
    animation:homePopupSliding 2s;
    -moz-animation:homePopupSliding 2s; /* Firefox */
    -webkit-animation:homePopupSliding 2s; /* Safari and Chrome */
    -o-animation:homePopupSliding 2s; /* Opera */
    /* 关闭过度 */
    opacity: 1;
    filter:Alpha(opacity=100);
    transition: opacity 1s;

}
@keyframes homePopupSliding
{
from {margin-top:-900px;}
to {margin-top:-350px;}
}

@-moz-keyframes homePopupSliding /* Firefox */
{
from {margin-top:-900px;}
to {margin-top:-350px;}
}

@-webkit-keyframes homePopupSliding /* Safari and Chrome */
{
from {margin-top:-900px;}
to {margin-top:-350px;}
}

@-o-keyframes homePopupSliding /* Opera */
{
from {margin-top:-900px;}
to {margintop:-350px;}
}


/* 钢铁侠反应堆 */
/* 定义一下几个盒子相同的部分 */
.circle {
	/* 圆形 */
	border-radius: 50%;
}
.center {
	position: absolute;
	top: 50%;
	left: 50%;
	/* 元素走自身高度/宽度 的一半 */
	transform: translate(-50%, -50%);
}
.container {
	/* 相对定位 */
    position: relative;
    top: 50%;
    left: 50%;
    margin-left: -150px;
    margin-top: -150px;
	width: 300px;
	height: 300px;
	border: 1px solid rgb(18, 20, 20);
	background-color: #384c50;
	/* 盒子阴影 默认是外部阴影 写了inset 就是内部阴影 */
	box-shadow: 0 0 32px 8px rgb(18, 20, 20), 0 0 4px 1px rgb(18, 20, 20) inset;
    opacity: 0.8;
    filter:Alpha(opacity=80);
}
.container .box1 {
	width: 238px;
	height: 238px;
	background-color: rgb(22, 26, 27);
	box-shadow: 0 0 4px 1px #52fefe;
}
.container .box2 {
	width: 220px;
	height: 220px;
	background-color: #fff;
	box-shadow: 0 0 5px 1px #52fefe, 0 0 5px 4px #52fefe inset;
}
.container .box3 {
	width: 180px;
	height: 180px;
	background-color: #073c4b;
	box-shadow: 0 0 5px 4px #52fefe, 0 0 6px 2px #52fefe inset;
}
.container .box4 {
	width: 120px;
	height: 120px;
	border: 1px solid #52fefe;
	background-color: #fff;
	box-shadow: 0 0 2px 1px #52fefe, 0 0 10px 5px #52fefe inset;
}
.container .box5 {
	width: 70px;
	height: 70px;
	border: 5px solid #1b4e5f;
	box-shadow: 0 0 7px 5px #52fefe, 0 0 10px 10px #52fefe inset;
}
.container .box6 {
	position: relative;
	width: 100%;
	height: 100%;
	/* 动画 名称 时长 linear 是匀速运动 infinite是无限次播放 */
	animation: rotate 3s linear infinite;
}
.container .box6 .coil {
	position: absolute;
	width: 30px;
	height: 20px;
	/* calc方法自动计算位移距离 */
	top: calc(50% - 110px);
	left: calc(50% - 15px);
	background-color: #073c4b;
	box-shadow: 0 0 5px #52fefe inset;
	/* calc方法自动计算数值 var函数调用了我们刚刚给元素定义的--i属性值 然后分别乘以45度 算出各自的度数 */
	transform: rotate(calc(var(--i) * 45deg));
	/* 这个是旋转的中心 */
	transform-origin: center 110px;
}
/* 定义一下旋转动画 */
@keyframes rotate {
	0% {
		transform: rotate(0);
	}
	100% {
		transform: rotate(360deg);
	}
}

/* 赛博朋克2077按钮 */
.PopupButton {
    width: 300px;
    height: 80px;
    background: none;
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;

    left: 10px;
    bottom: 10px;

    cursor: pointer;

    opacity: 0.9;
    filter:Alpha(opacity=90);
  }

  .PopupButton::after,
  .PopupButton::before,
  .glitch {
    content: "";
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    clip-path: polygon(
      0 0,
      100% 0,
      100% 100%,
      calc(100% - 25px) 100%,
      calc(100% - 25px) calc(100% - 10px),
      calc(100% - 55px) calc(100% - 10px),
      calc(100% - 55px) 100%,
      20px 100%,
      0 calc(100% - 20px)
    );
  }

  .PopupButton::before {
    left: 2px;
    /* background: hsl(180, 100%, 50%, 50%); */
    background: rgb(90,200,200);
  }
  .PopupButton::after {
    /* background: hsl(0deg, 100%, 60%); */
    /* background: rgb(233,206,241); */
    background-color:#333333;
  }

  .glitch {
    /* background: hsl(0deg, 100%, 60%); */
    background: rgb(36, 83, 172);
    /* box-shadow: 0 0 0 1px hsl(180, 100%, 50%) inset; */
    box-shadow: 0 0 0 1px  rgb(70, 224, 224) inset;
    z-index: 10;
    opacity: 0;
  }

  .text {
    font-size: 28px;
    font-weight: 800;
    color:rgb(86, 197, 228);
    position: relative;
    z-index: 15;
  }
  .text::before {
    content: attr(data-text);
    position: absolute;
    display: block;
    top: 0;
    left: 0;
    
    /* text-shadow: 1px 1px hsl(180, 100%, 50%), */
    text-shadow: 1px 1px rgb(70, 224, 224),
      /* -1px -2px hsl(50deg, 100%, 60%); */
    -1px -2px rgb(255, 94, 0);
    opacity: 0;
  }

  .PopupButton:hover .glitch,
  .PopupButton:hover .text::before {
    animation: glitch-effect 2s infinite;
    opacity: 1;
  }

  .platform {
    position: absolute;
    right: 28px;
    bottom: -4px;
    font-size: 10px;
    letter-spacing: 1px;
    font-weight: 500;
  }

  @keyframes glitch-effect {
    0% {
      clip-path: polygon(0 0, 100% 0, 100% 2%, 0 2%);
    }
    5% {
      clip-path: polygon(0 8%, 100% 8%, 100% 16%, 0 16%);
    }
    10% {
      clip-path: polygon(0 80%, 100% 80%, 100% 88%, 0 88%);
      transform: translate3d(-5px, 0, 0);
    }
    15% {
      clip-path: polygon(0 80%, 100% 80%, 100% 88%, 0 88%);
      transform: translate3d(5px, 0, 0);
    }
    16% {
      clip-path: polygon(0 80%, 100% 80%, 100% 88%, 0 88%);
      transform: translate3d(5px, 0, 0);
    }
    17% {
      clip-path: polygon(0 90%, 100% 90%, 100% 100%, 0 100%);
      transform: translate3d(5px, 0, 0);
    }
    18% {
      clip-path: polygon(0 0, 0 0, 0 0, 0 0);
    }
    20% {
      clip-path: polygon(0 30%, 100% 30%, 100% 65%, 0 65%);
    }
    25% {
      clip-path: polygon(0 30%, 100% 30%, 100% 65%, 0 65%);
      transform: translate3d(-5px, 0, 0);
    }
    28% {
      clip-path: polygon(0 30%, 100% 30%, 100% 65%, 0 65%);
      transform: translate3d(-5px, 0, 0);
    }
    29% {
      clip-path: polygon(0 30%, 100% 30%, 100% 65%, 0 65%);
      transform: translate3d(5px, 0, 0);
    }
    30% {
      clip-path: polygon(0 75%, 100% 75%, 100% 100%, 0 100%);
    }

    40% {
      clip-path: polygon(0 45%, 100% 45%, 100% 60%, 0 60%);
    }
    42% {
      clip-path: polygon(0 45%, 100% 45%, 100% 60%, 0 60%);
      transform: translate3d(-5px, 0, 0);
    }
    45% {
      clip-path: polygon(0 45%, 100% 45%, 100% 60%, 0 60%);
      transform: translate3d(5px, 0, 0);
    }
    48% {
      clip-path: polygon(0 45%, 100% 45%, 100% 60%, 0 60%);
      transform: translate3d(-5px, 0, 0);
    }
    50% {
      clip-path: polygon(0 0, 0 0, 0 0, 0 0);
    }
    60% {
      clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
    }
    100% {
      clip-path: polygon(0 100%, 100% 100%, 100% 100%, 0 100%);
      transform: translate3d(0, 0, 0);
    }
  }